#!/usr/bin/env sh

errormsg="Usage: $0 HOSTNAME ACTION [FLAG [PATH]]"
basedir=$(dirname $(readlink -f "$0"))

help() {
    echo "$errormsg

    Installs NixOS from config file located in ./hosts/<hostname>/
    or install home-manager
    
    WARNING: The old path is deleted before installing the new files
    
    Actions: system, home

    Flags: (system)
    --install -i [PATH] Install files in /mnt/etc/nixos/ (or PATH) and run nixos-install
    --copy    -c [PATH] Copy the files in /etc/nixos/ (or PATH)
    --symlink -l [PATH] Like copy but just symlinks
    --update  -u [PATH] Symlink the files in /etc/nixos/ (or PATH) and run nixos-rebuild switch --upgrade

    Flags: (home)
    --install-nix -n Also install nix (single-user only)"
    exit 0
}

except() {
    echo $errormsg
    exit 1
}

test_flag(){
    return $(test $1 != "")
}

check_write_permission(){
    if [ ! -d $1 ]; then
       return $(check_write_permission $(dirname $1))
    else
	   return $([ -w $1 ])
    fi
}

install_nix(){
    sudo install -d -m755 -o $(id -u) -g $(id -g) /nix
    curl -L https://nixos.org/nix/install | sh
}

distro=$(cat /etc/os-release | head -n 1 | sed 's/NAME=//')
isNixOS=$("$distro" == "NixOS")
baseflag="update"
basehostname=$(hostname)
action=""
flag=""
hostname=""
while test $# -gt 0; do
    case $1 in
	home)
	    [ -n $action ] && except
	    action="home"
	    path="~/.config/nixpkgs"
	    shift
	    ;;
	system)
	    [ -n $action ] && except
	    action="system"
	    shift
	    ;;
	-n | --install-nix)
	    current="install-nix"
	    if test_flag $curent
	    then
		flag=$current
		shift
	    else
		except
	    fi
	    ;;
	-i | --install)
	    current="install"
	    if test_flag $current; then
		flag=$current
		path="/mnt/etc/nixos"
		shift
		if (test hostname != "" && test $# -gt 0) || (test $# -gt 1); then
		    path=$1
		    shift
		fi
	    else
		except
	    fi
	    ;;
	-c | --copy)
	    current="copy"
	    if test_flag $current; then
		flag=$current
		path="/etc/nixos"
		shift
		if (test hostname != "" && test $# -gt 0) || (test $# -gt 1); then
		    path=$1
		    shift
		fi
	    else
		except
	    fi
	    ;;
	-l | --symlink)
	    current="symlink"
	    if test_flag $current; then
		flag=$current
		path="/etc/nixos"
		shift
		if (test hostname != "" && test $# -gt 0) || (test $# -gt 1); then
		    path=$1
		    shift
		fi
	    else
		except
	    fi
	    ;;
	-u | --update)
	    current="update"
	    if test_flag $current; then
		flag=$current
		path="/etc/nixos"
		shift
		if (test hostname != "" && test $# -gt 1) || (test $# -gt 2); then
		    path=$1
		    shift
		fi
	    else
		except
	    fi
	    ;;
	-h | --help)
	    help
	    ;;
	*)
	    if test $hostname==""; then
		hostname=$1
		shift
	    else
		except
	    fi
	    ;;
    esac
done

[ $flag=="" ] && flag=$baseflag && path="/etc/nixos"
[ $hostname=="" ] && hostname=$basehostname

if check_write_permission $path; then
    mkdir -p $path
    case $action in
	home)
	    ln -s $basedir/home/"home$($isNixOS || echo '-not-nixos').nix" \
	       $path/home.nix

	    [ $flag == 'install-nix' ] && install_nix

	    nix-channel --add \
			https://github.com/nix-community/home-manager/archive/master.tar.gz \
			home-manager
	    nix-channel --update
	    export NIX_PATH=$HOME/.nix-defexpr/channels${NIX_PATH:+:}$NIX_PATH
	    nix-shell '<home-manager>' -A install
	    source $HOME/.nix-profile/etc/profile.d/hm-session-vars.sh
	    home-manager switch
	    ;;
	system)
	    case $flag in
		install)
		    cp -r hosts/$hostname/* $path
		    cp -r modules           $path
		    cp -r packages          $path
		    cp -r services          $path
		    nixos-install --system $path/configuration.nix
		    ;;
		copy)
		    cp -r hosts/$hostname/* $path
		    cp -r modules           $path
		    cp -r packages          $path
		    cp -r services          $path
		    ;;
		symlink)
		    ln -s $basedir/hosts/$hostname/configuration.nix $path/configuration.nix
		    ;;
		update)
		    ln -s $basedir/hosts/$hostname/configuration.nix $path/configuration.nix
		    NIXOS_CONFIG=$path/configuration.nix nixos-rebuild switch --upgrade
		    ;;
		*)
		    echo "ERROR: Unidentified option $flag"
		    exit 1
		    ;;
	    esac
	    ;;
    esac
    
    exit 0
else
    "Your user doesn't have write permissions on $path. You might need to run this as root"
    exit 1
fi  
