diff --git a/helix-term/src/ui/editor.rs b/helix-term/src/ui/editor.rs
index 5d028415e8..7e8fa65c99 100644
--- a/helix-term/src/ui/editor.rs
+++ b/helix-term/src/ui/editor.rs
@@ -975,7 +975,7 @@
                 cxt.editor.count = NonZeroUsize::new(i);
             }
             // special handling for repeat operator
-            (key!('.'), _) if self.keymaps.pending().is_empty() => {
+            (key!(':'), _) if self.keymaps.pending().is_empty() => {
                 for _ in 0..cxt.editor.count.map_or(1, NonZeroUsize::into) {
                     // first execute whatever put us into insert mode
                     self.last_insert.0.execute(cxt);
diff --git a/helix-term/src/ui/popup.rs b/helix-term/src/ui/popup.rs
index db77492db8..a13cba4124 100644
--- a/helix-term/src/ui/popup.rs
+++ b/helix-term/src/ui/popup.rs
@@ -1,7 +1,7 @@
 use crate::{
     commands::Open,
     compositor::{Callback, Component, Context, Event, EventResult},
-    ctrl, key,
+    ctrl, key, shift,
 };
 use tui::{
     buffer::Buffer as Surface,
@@ -276,11 +276,11 @@
                 let _ = self.contents.handle_event(event, cx);
                 EventResult::Consumed(Some(close_fn))
             }
-            ctrl!('d') => {
+            shift!('T') => {
                 self.scroll_half_page_down();
                 EventResult::Consumed(None)
             }
-            ctrl!('u') => {
+            shift!('N') => {
                 self.scroll_half_page_up();
                 EventResult::Consumed(None)
             }
